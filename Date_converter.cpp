#include<stdio.h>
#include<stdlib.h>
#include<conio.h>
#include<windows.h>
void ask();
void nepday(int a, int b,int c);
void engday(int a, int b,int c);
void bstoad(int a,int b,int c);
void adtobs(int a,int b, int c);
int leap(int a);
void loop1(int a,int b);
void loop2(int a,int b,int c);
void exit();
void movement();

struct Date{
    int mm;
    int yy;
    int dd;
};
struct Date date;
int check,help1,help2;
	
void gotoxy(short x, short y) 
 {
COORD pos = {x, y};
SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), pos);
}

void setbc(int ForgC, int BackC)
{
     WORD wColor = ((BackC & 0x0F) << 4) + (ForgC & 0x0F);;
     SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), wColor);
     return;
}

int main()
{
	char take;
	SetConsoleTitle("Date Converter - Team NARK");
	int i;
system("cls");
		char wlc[50]=" WELCOME TO DATE CONVERTER ";
gotoxy(6,2);
for(i=0;i<20;i++)
{
 Sleep(30);
printf("\4");
}
for(i=0;i<27;i++)
{
Sleep(30);
	printf("%c",wlc[i]);
}
for(i=0;i<20;i++)
{
 Sleep(30);
printf("\4");
}
gotoxy(6,6);
printf("\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2");
for(i=7;i<10;i++)
{
gotoxy(6,i);
printf("\xb2\xb2");   
}
gotoxy(6,8);
printf("\xb2\xb2   1. BS TO AD");
gotoxy(6,10);
printf("\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2");
for(i=7;i<10;i++)
{
gotoxy(27,i);
printf("\xb2\xb2");
}
gotoxy(45,6);
printf("\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2");
for(i=7;i<10;i++)
{
gotoxy(45,i);
printf("\xb2\xb2");
}
gotoxy(45,8);
printf("\xb2\xb2   2. AD TO BS");
gotoxy(45,10);
printf("\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2");
for(i=7;i<10;i++)
{
gotoxy(66,i);
printf("\xb2\xb2");
}
gotoxy(29,12);
printf("\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2");
for(i=13;i<16;i++)
{
gotoxy(29,i);
printf("\xb2\xb2");
}
gotoxy(29,14);
printf("\xb2\xb2 3. EXIT");
gotoxy(29,16);
printf("\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2\xb2");
for(i=13;i<16;i++)
{
gotoxy(43,i);
printf("\xb2\xb2");
}
gotoxy(6,18);
printf("Enter your choice: ");
gotoxy(26,18);
scanf("%c",&take);
switch(take)
{
	case '1':
		check=1;
		ask();
		break;
		case '2':
			check=2;
			ask();
			break;
			case '3':
				exit();
				break;
				default:
					system("cls");
			gotoxy(6,6);
				printf("\aInvalid Input!!!\n\n");
				printf("\tPlease Enter 1,2 or 3. Starting the main module in 3 seconds>>>>");
Sleep(3000);
main();
}
return 0;
}

void ask()
{
			system("cls");
			gotoxy(15,0);
		if(check==1)
		printf("\4\4\4\4\4\4\4\4\4\4\4\4\4 BS to AD Converter \4\4\4\4\4\4\4\4\4\4\4\4\4\n\n");
else
		printf("\4\4\4\4\4\4\4\4\4\4\4\4\4 AD to BS Converter \4\4\4\4\4\4\4\4\4\4\4\4\4\n\n");
	gotoxy(15,8);
	printf("-> Enter the year: ");
	scanf("%d",&date.yy);
	if(check==1)
	{
		if(date.yy<2000 || date.yy>2089)
		{
			system("cls");
			gotoxy(6,12);
			printf("\aSorry!!! This converter only supports year between 2000 to 2089 BS");
		gotoxy(6,14);
		printf("Redirecting BS to AD converter in 3 seconds...");
		Sleep(3000);
		ask();
		}
	}
	else
	{
		if(date.yy<1943||date.yy>2033)
		{
		system("cls");
			gotoxy(6,12);
			printf("\aInvalid Input!!! Make sure you enter valid date between 1944 to 2033 AD");
		gotoxy(6,14);
		printf("Redirecting AD to BS converter in 3 seconds...");
		Sleep(3000);
		ask();
	}
	}
	gotoxy(15,10);
	printf("-> Enter the month: ");
	scanf("%d",&date.mm);
	if (date.mm<1||date.mm>12)
	{
		system("cls");
			gotoxy(6,12);
			printf("\aInvalid Input!!! There are at most 12 months in a year.");
		gotoxy(6,14);
		printf("Redirecting in 3 seconds...");
		Sleep(3000);
		ask();
	}
	gotoxy(15,12);
	printf("-> Enter the day: ");
	scanf("%d",&date.dd);
	system("cls");
	if (check==1)
	nepday(date.yy,date.mm,date.dd);
	else
	engday(date.yy,date.mm,date.dd);
}

void nepday(int year,int month,int day )
{
	int nepdays[]={30,32,31,32,31,30,30,30,29,30,29,31,31,31,32,31,31,31,30,29,30,29,30,30,31,31,32,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,30,32,31,32,31,30,30,30,29,30,29,31,31,31,32,31,31,31,30,29,30,29,30,30,31,31,32,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,31,31,31,32,31,31,29,30,30,29,29,31,31,31,32,31,31,31,30,29,30,29,30,30,31,31,32,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,31,31,31,32,31,31,29,30,30,29,30,30,31,31,32,31,31,31,30,29,30,29,30,30,31,31,32,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,31,31,31,32,31,31,29,30,30,29,30,30,31,31,32,31,31,31,30,29,30,29,30,30,31,32,31,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,30,29,31,31,31,31,32,31,31,30,29,30,29,30,30,31,31,32,31,31,31,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,30,31,32,31,32,31,30,30,30,29,30,29,31,31,31,31,32,31,31,30,29,30,29,30,30,31,31,32,31,31,31,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,30,32,31,32,31,30,30,30,29,30,29,31,31,31,32,31,31,31,30,29,30,29,30,30,31,31,32,31,32,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,30,32,31,32,31,30,30,30,29,30,29,31,31,31,32,31,31,31,30,29,30,29,30,30,31,31,32,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,30,32,31,32,31,31,29,30,30,29,29,31,31,31,32,31,31,31,30,29,30,29,30,30,31,31,32,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,31,31,31,32,31,31,29,30,30,29,30,30,31,31,32,31,31,31,30,29,30,29,30,30,31,31,32,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,31,31,31,32,31,31,29,30,30,29,30,30,31,31,32,31,31,31,30,29,30,29,30,30,31,32,31,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,31,31,31,32,31,31,30,29,30,29,30,30,31,31,32,31,31,31,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,30,31,32,31,32,31,30,30,30,29,30,29,31,31,31,31,32,31,31,30,29,30,29,30,30,31,31,32,31,31,31,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,30,31,32,31,32,31,30,30,30,29,30,29,31,31,31,32,31,31,31,30,29,30,29,30,30,31,31,32,31,32,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,30,32,31,32,31,30,30,30,29,30,29,31,31,31,32,31,31,31,30,29,30,29,30,30,31,31,32,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,30,32,31,32,31,31,29,30,29,30,29,31,31,31,32,31,31,31,30,29,30,29,30,30,31,31,32,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,31,31,31,32,31,31,29,30,30,29,29,31,31,31,32,31,31,31,30,29,30,29,30,30,31,31,32,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,31,31,31,32,31,31,29,30,30,29,30,30,31,31,32,31,31,31,30,29,30,29,30,30,31,32,31,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,31,31,31,32,31,31,30,29,30,29,30,30,31,31,32,31,31,31,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,30,31,32,31,32,31,30,30,30,29,30,29,31,31,31,31,32,31,31,30,29,30,29,30,30,31,31,32,31,31,31,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,30,31,31,32,32,31,30,30,30,29,30,30,30,30,32,31,32,31,30,30,30,29,30,30,30,31,31,32,31,31,30,30,30,29,30,30,30,31,31,32,31,31,30,30,30,29,30,30,30,31,32,31,32,30,31,30,30,29,30,30,30,30,32,31,32,31,30,30,30,29,30,30,30,31,31,32,31,31,31,30,30,29,30,30,30,30,31,32,32,30,31,30,30,29,30,30,30,30,32,31,32,31,30,30,30,29,30,30,30,30,32,31,32,31,30,30,30,29,30,30,30};
	int i=1,j,w=4,yea=2000,mont=1,nod,days=0;
		if(check==1)
		{
			system("cls");
		gotoxy(15,0);
		printf("\4\4\4\4\4\4\4\4\4\4\4\4\4 BS to AD Converter \4\4\4\4\4\4\4\4\4\4\4\4\4\n\n");
}
if (check==1)
gotoxy(10,7);
else
gotoxy(52,7);
setbc(7,0);
printf("%d",day);
switch (month)
{
	case 1:
		printf("  Baishak, ");
		break;
		case 2:
			printf("  Jestha, ");
			break;
			case 3:
				printf("  Ashar, ");
				break;
				case 4:
					printf("  Shrawan, ");
					break;
					case 5:
						printf("  Bhadra, ");
						break;
						case 6:
							printf("  Ashoj, ");
							break;
							case 7:
								printf("  Kartik, ");
								break;
								case 8:
									printf("  Mangshir, ");
									break;
									case 9:
										printf("  Poush, ");
										break;
										case 10:
											printf("  Magh, ");
											break;
											case 11:
												printf("  Falgun, ");
												break;
												case 12:
													printf("  Chaitra, ");
}
printf("%d",year);
while(yea!=year || month!=mont)
{
	days+=nepdays[i-1];
	if (i%12==0)
	{
	yea++;
	mont=1;
}
else
mont++;
i++;
}
w=days%7+w;
w=w%7;
nod=nepdays[i-1];
	if (check==1)
{
	if(day>nod)
		{
			system("cls");
			gotoxy(6,12);
			printf("\aSorry!!! Input number of days exceeds number of days of that month.");
		gotoxy(6,14);
		printf("Redirecting in 3 seconds...");
		Sleep(3000);
		ask();
		}
		help1=nepdays[i-2];
		help2=nod;
loop1(w,nod);
bstoad(date.yy,date.mm,date.dd);
}
else
loop2(w,nod,day);
}

void engday(int year,int month,int day )
{
	int engdays[]={};
	int i=1,j,w=6,yea=1943,mont=1,nod,days=0;
		if(check==2)
		{
			system("cls");
		gotoxy(15,0);
		printf("\4\4\4\4\4\4\4\4\4\4\4\4\4 AD to BS Converter \4\4\4\4\4\4\4\4\4\4\4\4\4\n\n");
}
if (check==2)
gotoxy(10,7);
else
gotoxy(52,7);
setbc(7,0);
printf("%d",day);
switch (month)
{
	case 1:
		printf("  January, ");
		break;
		case 2:
			printf("  February, ");
			break;
			case 3:
				printf("  March, ");
				break;
				case 4:
					printf("  April, ");
					break;
					case 5:
						printf("  May, ");
						break;
						case 6:
							printf("  June, ");
							break;
							case 7:
								printf("  July, ");
								break;
								case 8:
									printf("  August, ");
									break;
									case 9:
										printf("  September, ");
										break;
										case 10:
											printf("  October, ");
											break;
											case 11:
												printf("  November, ");
												break;
												case 12:
													printf("  December, ");
}
printf("%d",year);
while(yea!=year || month!=mont)
{
	days+=engdays[i-1];
	if (i%12==0)
	{
	yea++;
	mont=1;
}
else
mont++;
i++;
}
w=days%7+w;
w=w%7;
nod=engdays[i-1];
if (check==2)
{
		if(day>nod)
		{
			system("cls");
			gotoxy(6,12);
			printf("\aSorry!!! Input number of days exceeds number of days of that month.");
		gotoxy(6,14);
		printf("Redirecting in 3 seconds...");
		Sleep(3000);
		ask();
		}
		help1=engdays[i-2];
		help2=nod;
loop1(w,nod);
adtobs(date.yy,date.mm,date.dd);
}
else
loop2(w,nod,day);
}

void loop1(int w,int nod)
{
	int d=1,i,j;
	gotoxy(2,9);
	printf("Sun");
	gotoxy(7,9);
	printf("Mon");
	gotoxy(12,9);
	printf("Tue");
	gotoxy(17,9);
	printf("Wed");
	gotoxy(22,9);
	printf("Thu");
	gotoxy(27,9);
	printf("Fri");
	gotoxy(32,9);
	printf("Sat");
	gotoxy(2,8);
	printf("---------------------------------");
	gotoxy(2,6);
	printf("---------------------------------");
for(i=10;i<16;i++)
{
	for(j=3;j<34;j+=5)
	{
		if(w==0)
		w=7;
		if ((w*5-2)==j)
		{
		gotoxy(j,i);
		if(date.dd==d)
		setbc(15,12);
		else if(j==33)
		setbc(12,0);
		else
		setbc(7,0);
		printf("%d",d);
	if (w%7==0)
	w=1;
	else
	w++;
		d++;
		if(d>nod)
		break;
	}
	else
	continue;
}
if(d>nod)
break;
}
setbc(7,0);
}


void loop2(int w,int nod,int day)
{
		gotoxy(44,9);
	printf("Sun");
	gotoxy(49,9);
	printf("Mon");
	gotoxy(54,9);
	printf("Tue");
	gotoxy(59,9);
	printf("Wed");
	gotoxy(64,9);
	printf("Thu");
	gotoxy(69,9);
	printf("Fri");
	gotoxy(74,9);
	printf("Sat");
	gotoxy(44,8);
	printf("---------------------------------");
	gotoxy(44,6);
	printf("---------------------------------");
	int d=1,i,j;
for(i=10;i<16;i++)
{
	for(j=45;j<76;j+=5)
	{
		if (w==0)
		w=7;
		if ((w*5+40)==j)
		{
		gotoxy(j,i);
		if(day==d)
		setbc(15,12);
		else if(j==75)
		setbc(12,0);
		else
		setbc(7,0);
		printf("%d",d);
	if (w%7==0)
	w=1;
	else
	w++;
		d++;
		if(d>nod)
		break;
	}
	else 
	continue;
}
if(d>nod)
break;
}
setbc(7,0);
movement();
}

void movement()
{
	gotoxy(2,20);
printf("Press 'a' to move to previous day, Press 'd' to move to next day,");
gotoxy(2,21);
	printf("Press 's' to move to previous month, Press 'w' to move to next month,");
gotoxy(2,22);
printf("Press 'q' to move to previous year, Press 'e' to move to next year,");
	gotoxy(2,24);
printf("Press '1' to continue, '2' to go to main menu and '3' to exit...");
switch(getch())
{
	case '1':
		ask();
		break;
		case '2':
			main();
			break;
			case '3':
				exit();
				break;
			
			case 'a':
				if(date.dd==1)
				{
					if(date.mm==1)
					{
						if (check==1)
						{
							if(date.yy==2000)
							{
							printf("\a");
							nepday(date.yy,date.mm=1,date.dd=1);
						}
							else
						nepday(date.yy-=1,date.mm=12,date.dd=help1);
					}
						else
						{
						if(date.yy==1944)
						{
							printf("\a");
							engday(date.yy,date.mm=1,date.dd=1);
						}
						else
						engday(date.yy-=1,date.mm=12,date.dd=help1);
					}
				}
					else
					{
						if(check==1)
						nepday(date.yy,date.mm-=1,date.dd=help1);
						else
						engday(date.yy,date.mm-=1,date.dd=help1);
					}
				}
				else
				{
					if(check==1)
					nepday(date.yy,date.mm,date.dd-=1);
				else
				engday(date.yy,date.mm,date.dd-=1);
				}
				
				case 'd':
									if(date.dd==help2)
				{
					if(date.mm==12)
					{
						if (check==1)
						{
							if(date.yy==2089)
							{
							printf("\a");
							nepday(date.yy,date.dd=12,date.dd=help2);
						}
							else
						nepday(date.yy+=1,date.mm=1,date.dd=1);
					}
						else
						{
						if(date.yy==2033)
						{
							printf("\a");
							engday(date.yy,date.mm=12,date.dd=help2);
						}
						else
						engday(date.yy+=1,date.mm=1,date.dd=1);
					}
				}
					else
					{
						if(check==1)
						nepday(date.yy,date.mm+=1,date.dd=1);
						else
						engday(date.yy,date.mm+=1,date.dd=1);
					}
				}
				else
				{
					if(check==1)
					nepday(date.yy,date.mm,date.dd+=1);
				else
				engday(date.yy,date.mm,date.dd+=1);
				}
				
			case 'w':
			if(date.mm==12)
					{
						if (check==1)
						{
							if(date.yy==2089)
							{
							printf("\a");
							nepday(date.yy,date.dd=12,date.dd);
						}
							else
						nepday(date.yy+=1,date.mm=1,date.dd);
					}
						else
						{
						if(date.yy==2033)
						{
							printf("\a");
							engday(date.yy,date.mm=12,date.dd);
						}
						else
						engday(date.yy+=1,date.mm=1,date.dd);
					}
				}
					else
					{
						if(check==1)
						nepday(date.yy,date.mm+=1,date.dd);
						else
						engday(date.yy,date.mm+=1,date.dd);
					}
					
					case 's':
						if(date.mm==1)
					{
						if (check==1)
						{
							if(date.yy==2000)
							{
							printf("\a");
							nepday(date.yy,date.mm=1,date.dd);
						}
							else
						nepday(date.yy-=1,date.mm=12,date.dd);
					}
						else
						{
						if(date.yy==1944)
						{
							printf("\a");
							engday(date.yy,date.mm=1,date.dd);
						}
						else
						engday(date.yy-=1,date.mm=12,date.dd);
					}
				}
					else
					{
						if(check==1)
						nepday(date.yy,date.mm-=1,date.dd);
						else
						engday(date.yy,date.mm-=1,date.dd);
					}					
	case 'q':
		if (check==1)
						{
							if(date.yy==2000)
							{
							printf("\a");
							nepday(date.yy,date.mm,date.dd);
						}
							else
						nepday(date.yy-=1,date.mm,date.dd);
					}
						else
						{
						if(date.yy==1944)
						{
							printf("\a");
							engday(date.yy,date.mm,date.dd);
						}
						else
						engday(date.yy-=1,date.mm,date.dd);
					}
		case 'e':
			if (check==1)
						{
							if(date.yy==2089)
							{
							printf("\a");
							nepday(date.yy,date.dd,date.dd);
						}
							else
						nepday(date.yy+=1,date.mm,date.dd);
					}
						else
						{
						if(date.yy==2033)
						{
							printf("\a");
							engday(date.yy,date.mm,date.dd);
						}
						else
						engday(date.yy+=1,date.mm,date.dd);
					}
								
				default:
					system("cls");
				gotoxy(2,10);
				printf("Invalid Input!! Redirecting in 3 seconds...");
				Sleep(3000);
					nepday(date.yy,date.mm,date.dd);
}
}
		
void bstoad(int nepyear, int nepmonth, int nepday)
{
	int sny=2000,snm=1,snd=1,iey=1943,iem=4,ied=14,j,k,i,totaldayscount=0,nepdiff,months,endday=0,l,day=1;
int nepdays[]={30,32,31,32,31,30,30,30,29,30,29,31,31,31,32,31,31,31,30,29,30,29,30,30,31,31,32,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,30,32,31,32,31,30,30,30,29,30,29,31,31,31,32,31,31,31,30,29,30,29,30,30,31,31,32,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,31,31,31,32,31,31,29,30,30,29,29,31,31,31,32,31,31,31,30,29,30,29,30,30,31,31,32,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,31,31,31,32,31,31,29,30,30,29,30,30,31,31,32,31,31,31,30,29,30,29,30,30,31,31,32,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,31,31,31,32,31,31,29,30,30,29,30,30,31,31,32,31,31,31,30,29,30,29,30,30,31,32,31,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,30,29,31,31,31,31,32,31,31,30,29,30,29,30,30,31,31,32,31,31,31,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,30,31,32,31,32,31,30,30,30,29,30,29,31,31,31,31,32,31,31,30,29,30,29,30,30,31,31,32,31,31,31,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,30,32,31,32,31,30,30,30,29,30,29,31,31,31,32,31,31,31,30,29,30,29,30,30,31,31,32,31,32,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,30,32,31,32,31,30,30,30,29,30,29,31,31,31,32,31,31,31,30,29,30,29,30,30,31,31,32,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,30,32,31,32,31,31,29,30,30,29,29,31,31,31,32,31,31,31,30,29,30,29,30,30,31,31,32,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,31,31,31,32,31,31,29,30,30,29,30,30,31,31,32,31,31,31,30,29,30,29,30,30,31,31,32,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,31,31,31,32,31,31,29,30,30,29,30,30,31,31,32,31,31,31,30,29,30,29,30,30,31,32,31,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,31,31,31,32,31,31,30,29,30,29,30,30,31,31,32,31,31,31,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,30,31,32,31,32,31,30,30,30,29,30,29,31,31,31,31,32,31,31,30,29,30,29,30,30,31,31,32,31,31,31,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,30,31,32,31,32,31,30,30,30,29,30,29,31,31,31,32,31,31,31,30,29,30,29,30,30,31,31,32,31,32,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,30,32,31,32,31,30,30,30,29,30,29,31,31,31,32,31,31,31,30,29,30,29,30,30,31,31,32,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,30,32,31,32,31,31,29,30,29,30,29,31,31,31,32,31,31,31,30,29,30,29,30,30,31,31,32,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,31,31,31,32,31,31,29,30,30,29,29,31,31,31,32,31,31,31,30,29,30,29,30,30,31,31,32,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,31,31,31,32,31,31,29,30,30,29,30,30,31,31,32,31,31,31,30,29,30,29,30,30,31,32,31,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,31,31,31,32,31,31,30,29,30,29,30,30,31,31,32,31,31,31,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,30,31,32,31,32,31,30,30,30,29,30,29,31,31,31,31,32,31,31,30,29,30,29,30,30,31,31,32,31,31,31,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,30,31,31,32,32,31,30,30,30,29,30,30,30,30,32,31,32,31,30,30,30,29,30,30,30,31,31,32,31,31,30,30,30,29,30,30,30,31,31,32,31,31,30,30,30,29,30,30,30,31,32,31,32,30,31,30,30,29,30,30,30,30,32,31,32,31,30,30,30,29,30,30,30,31,31,32,31,31,31,30,30,29,30,30,30,30,31,32,32,30,31,30,30,29,30,30,30,30,32,31,32,31,30,30,30,29,30,30,30,30,32,31,32,31,30,30,30,29,30,30,30};
int monthsofengyear[]={0,31,28,31,30,31,30,31,31,30,31,30,31 };
int monthsofengleapyear[]={0,31,29,31,30,31,30,31,31,30,31,30,31 };
nepdiff=nepyear-sny;
if(nepdiff==0)
{
for(k=0;k<(nepmonth-1);k++)
totaldayscount+=nepdays[k];
totaldayscount+=nepday-snd;
}
else
{
months=(nepdiff)*12;
for(i=0;i<months;i++)
	totaldayscount+=nepdays[i];
for(j=i;j<(i+(nepmonth-1));j++)
totaldayscount+=nepdays[j];
totaldayscount+=nepday-snd;
}
while(totaldayscount!=0)
{
	l=leap(iey);
	if(l==1)
	endday=monthsofengleapyear[iem];
	else
	endday=monthsofengyear[iem];
	ied++;
	day++;     
	if(ied>endday)
	{iem++;
	ied=1;                
		if(iem>12)
	{
	iey++;
	iem=1;                 
	}
	}
		if(day>7)
		day=1;
	totaldayscount--;
}
engday(iey,iem,ied);
}

void adtobs(int engyear,int engmonth,int engday)
{
		int sey=1943,sem=4,sed=14,totaldayscount=0,months,k,i,j,engdiff,nepdiff,iny=2000,inm=1,ind=1,endday=0,var=1,day=1;
	int engdays[]={};
int nepdays[]={0,30,32,31,32,31,30,30,30,29,30,29,31,31,31,32,31,31,31,30,29,30,29,30,30,31,31,32,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,30,32,31,32,31,30,30,30,29,30,29,31,31,31,32,31,31,31,30,29,30,29,30,30,31,31,32,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,31,31,31,32,31,31,29,30,30,29,29,31,31,31,32,31,31,31,30,29,30,29,30,30,31,31,32,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,31,31,31,32,31,31,29,30,30,29,30,30,31,31,32,31,31,31,30,29,30,29,30,30,31,31,32,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,31,31,31,32,31,31,29,30,30,29,30,30,31,31,32,31,31,31,30,29,30,29,30,30,31,32,31,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,30,29,31,31,31,31,32,31,31,30,29,30,29,30,30,31,31,32,31,31,31,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,30,31,32,31,32,31,30,30,30,29,30,29,31,31,31,31,32,31,31,30,29,30,29,30,30,31,31,32,31,31,31,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,30,32,31,32,31,30,30,30,29,30,29,31,31,31,32,31,31,31,30,29,30,29,30,30,31,31,32,31,32,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,30,32,31,32,31,30,30,30,29,30,29,31,31,31,32,31,31,31,30,29,30,29,30,30,31,31,32,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,30,32,31,32,31,31,29,30,30,29,29,31,31,31,32,31,31,31,30,29,30,29,30,30,31,31,32,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,31,31,31,32,31,31,29,30,30,29,30,30,31,31,32,31,31,31,30,29,30,29,30,30,31,31,32,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,31,31,31,32,31,31,29,30,30,29,30,30,31,31,32,31,31,31,30,29,30,29,30,30,31,32,31,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,31,31,31,32,31,31,30,29,30,29,30,30,31,31,32,31,31,31,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,30,31,32,31,32,31,30,30,30,29,30,29,31,31,31,31,32,31,31,30,29,30,29,30,30,31,31,32,31,31,31,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,30,31,32,31,32,31,30,30,30,29,30,29,31,31,31,32,31,31,31,30,29,30,29,30,30,31,31,32,31,32,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,30,32,31,32,31,30,30,30,29,30,29,31,31,31,32,31,31,31,30,29,30,29,30,30,31,31,32,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,30,32,31,32,31,31,29,30,29,30,29,31,31,31,32,31,31,31,30,29,30,29,30,30,31,31,32,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,31,31,31,32,31,31,29,30,30,29,29,31,31,31,32,31,31,31,30,29,30,29,30,30,31,31,32,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,31,31,31,32,31,31,29,30,30,29,30,30,31,31,32,31,31,31,30,29,30,29,30,30,31,32,31,32,31,30,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,31,31,31,31,32,31,31,30,29,30,29,30,30,31,31,32,31,31,31,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,30,31,32,31,32,31,30,30,30,29,30,29,31,31,31,31,32,31,31,30,29,30,29,30,30,31,31,32,31,31,31,30,29,30,29,30,30,31,32,31,32,31,30,30,30,29,29,30,30,31,31,32,32,31,30,30,30,29,30,30,30,30,32,31,32,31,30,30,30,29,30,30,30,31,31,32,31,31,30,30,30,29,30,30,30,31,31,32,31,31,30,30,30,29,30,30,30,31,32,31,32,30,31,30,30,29,30,30,30,30,32,31,32,31,30,30,30,29,30,30,30,31,31,32,31,31,31,30,30,29,30,30,30,30,31,32,32,30,31,30,30,29,30,30,30,30,32,31,32,31,30,30,30,29,30,30,30,30,32,31,32,31,30,30,30,29,30,30,30};
engdiff=engyear-sey;
if(engdiff==0)
{
for(k=3;k<(engmonth-1);k++)
totaldayscount+=engdays[k];
totaldayscount+=engday-sed;
}
else
{
months=(engdiff)*12;
for(i=3;i<months;i++)
	totaldayscount+=engdays[i];
for(j=i;j<(i+(engmonth-1));j++)
totaldayscount+=engdays[j];
totaldayscount+=engday-sed;
}
while(totaldayscount!=0)
{
	endday=nepdays[var];
	ind++;
	day++;
	if(ind>endday)
	{var++;
	inm++;
	ind=1;
	if(inm>12)
	{
	iny++;
	inm=1;
	}
	}
		if(day>7)
		{day=1;
		}
	totaldayscount--;
}
nepday(iny,inm,ind);
}

int leap(int iey)
{
	int l;
		if(((iey%4==0)&&(iey%100!=0))||(iey%400==0))
		l=1;
		else
		l=0;
	return l;
}

void exit()
{
	system("cls");
	int i;
	char thanks[1000]="Thanks for using Sample Calender project !!!";
	char d[100]="Developed By:";
	char v[100]="Team NARK";
	system("cls");
	gotoxy(23,5);

	for(i=0;i<45;i++)
	{	Sleep(30);
	printf("%c",thanks[i]);
	}
	gotoxy(23,8);
	for(i=0;i<31;i++)
	{	Sleep(30);
	printf("%c",d[i]);
	}
	gotoxy(40,8);
	for(i=0;i<16;i++)
	{ Sleep(30);
	printf("%c",v[i]);
}
gotoxy(23,20);
printf("Exiting in 3 seconds......>>>>>>>>");
Sleep(3000);
printf("\a");
exit(0);
	}

